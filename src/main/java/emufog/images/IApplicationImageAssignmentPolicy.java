package emufog.images;

import emufog.graph.Graph;
import emufog.settings.Settings;

public interface IApplicationImageAssignmentPolicy {
	/**
	 * Assigns an image from the list provided in settings to every
	 * node in graph that can be emulated with a Docker Container, and 
	 * stores the resulting mapping in the graph.
	 * When writing an implementation of this method, the developer must 
	 * make sure that any mapping that is generated by this method does not
	 * map a node's ID to a null or empty string.
	 * @param graph the graph representing the network
	 * @param settings the object containing the Docker Types and images
	 * extracted from the file settings.json
	 */
	public void generateImageMapping(Graph graph, Settings settings);
	
	/**
	 * Assigns a list of commands to be executed to every
	 * node in graph that can be emulated with a Docker Container, and 
	 * stores the resulting mapping in the graph.
	 * When writing an implementation of this method, the developer must 
	 * make sure that any mapping that is generated by this method does not
	 * map a node's ID to a null or empty list.
	 * @param graph the graph representing the network
	 * @param settings the object containing the Docker Types and images
	 * extracted from the file settings.json
	 */
	public void generateCommandsLists(Graph graph, Settings settings);
}
